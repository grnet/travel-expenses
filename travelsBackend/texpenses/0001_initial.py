# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-07-14 15:34
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import texpenses.models.models
import texpenses.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('iban', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.RegexValidator(b'^^GR\\d{9}[0-9A-Z]{16}$', b'IBAN number is not valid.')])),
                ('specialtyID', models.CharField(choices=[('1', '\u0397\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bb\u03cc\u03b3\u03bf\u03c2 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03b9 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03cc\u03c2 \u03a5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ce\u03bd'), ('3', '\u0398\u03b5\u03c4\u03b9\u03ba\u03ad\u03c2 \u0395\u03c0\u03b9\u03c3\u03c4\u03ae\u03bc\u03b5\u03c2 (\u03c6\u03c5\u03c3\u03b9\u03ba\u03ae, \u03c7\u03b7\u03bc\u03b5\u03af\u03b1, \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac)'), ('2', '\u0395\u03c0\u03b9\u03c3\u03c4\u03ae\u03bc\u03b7 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03a4\u03b7\u03bb\u03b5\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03b9\u03ce\u03bd'), ('5', '\u0394\u03b7\u03bc\u03bf\u03c3\u03b9\u03bf\u03b3\u03c1\u03b1\u03c6\u03af\u03b1 - \u0395\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03af\u03b1'), ('4', '\u0394\u03b9\u03bf\u03af\u03ba\u03b7\u03c3\u03b7 \u03ba\u03b1\u03b9 \u039f\u03b9\u03ba\u03bf\u03bd\u03bf\u03bc\u03af\u03b1'), ('7', '\u03a6\u03b9\u03bb\u03bf\u03c3\u03bf\u03c6\u03af\u03b1 - \u03a0\u03b1\u03b9\u03b4\u03b1\u03b3\u03c9\u03b3\u03b9\u03ba\u03ae - \u03a6\u03b9\u03bb\u03bf\u03bb\u03bf\u03b3\u03af\u03b1'), ('6', '\u039d\u03bf\u03bc\u03b9\u03ba\u03ae'), ('8', '\u0386\u03bb\u03bb\u03b5\u03c2 \u03b5\u03b9\u03b4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03ce\u03bd (\u03c0\u03bb\u03b7\u03bd \u0397\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bb\u03cc\u03b3\u03c9\u03bd \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03ce\u03bd)')], max_length=10)),
                ('taxRegNum', models.CharField(blank=True, max_length=9, null=True, validators=[texpenses.validators.afm_validator])),
                ('kind', models.CharField(blank=True, choices=[('1', '\u03a0\u03c1\u03cc\u03b5\u03b4\u03c1\u03bf\u03c2 \u0394\u03a3'), ('3', '\u0395\u03c0\u03b9\u03ba\u03b5\u03c6\u03b1\u03bb\u03ae\u03c2 \u039f\u03bc\u03ac\u03b4\u03b1\u03c2 \u03a3\u03c4\u03c1\u03b1\u03c4\u03b7\u03b3\u03b9\u03ba\u03ae\u03c2'), ('2', '\u039c\u03ad\u03bb\u03bf\u03c2 \u0394\u03a3'), ('5', '\u03a3\u03c4\u03ad\u03bb\u03b5\u03c7\u03bf\u03c2 \u03a4\u03b5\u03c7\u03bd\u03b9\u03ba\u03bf\u03cd \u03a4\u03bc\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2'), ('4', '\u0394\u03b9\u03b1\u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03c4\u03ae\u03c2 \u0388\u03c1\u03b3\u03c9\u03bd'), ('7', '\u039d\u03bf\u03bc\u03b9\u03ba\u03ae \u03a5\u03c0\u03bf\u03c3\u03c4\u03ae\u03c1\u03b9\u03be\u03b7'), ('6', '\u0391\u03bd\u03b1\u03bb\u03c5\u03c4\u03ae\u03c2/\u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03ae\u03c2'), ('9', '\u0395\u03be\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03cc\u03c2 \u03c3\u03c5\u03bd\u03b5\u03c1\u03b3\u03ac\u03c4\u03b7\u03c2'), ('8', '\u0394\u03b9\u03bf\u03b9\u03ba\u03b7\u03c4\u03b9\u03ba\u03ae \u03ba\u03b1\u03b9 \u039f\u03b9\u03ba\u03bf\u03bd\u03bf\u03bc\u03b9\u03ba\u03ae \u03a5\u03c0\u03bf\u03c3\u03c4\u03ae\u03c1\u03b9\u03be\u03b7')], max_length=10, null=True)),
                ('category', models.CharField(choices=[('A', 'A'), ('B', 'B')], default=b'B', max_length=1)),
                ('trip_days_left', models.IntegerField(default=60)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalExpenses',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('cost', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('category', models.CharField(choices=[(b'A', b'A'), (b'B', b'B'), (b'C', b'C')], default=b'A', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Petition',
            fields=[
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('iban', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.RegexValidator(b'^^GR\\d{9}[0-9A-Z]{16}$', b'IBAN number is not valid.')])),
                ('specialtyID', models.CharField(choices=[('1', '\u0397\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bb\u03cc\u03b3\u03bf\u03c2 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03b9 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03cc\u03c2 \u03a5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ce\u03bd'), ('3', '\u0398\u03b5\u03c4\u03b9\u03ba\u03ad\u03c2 \u0395\u03c0\u03b9\u03c3\u03c4\u03ae\u03bc\u03b5\u03c2 (\u03c6\u03c5\u03c3\u03b9\u03ba\u03ae, \u03c7\u03b7\u03bc\u03b5\u03af\u03b1, \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac)'), ('2', '\u0395\u03c0\u03b9\u03c3\u03c4\u03ae\u03bc\u03b7 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03a4\u03b7\u03bb\u03b5\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03b9\u03ce\u03bd'), ('5', '\u0394\u03b7\u03bc\u03bf\u03c3\u03b9\u03bf\u03b3\u03c1\u03b1\u03c6\u03af\u03b1 - \u0395\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03af\u03b1'), ('4', '\u0394\u03b9\u03bf\u03af\u03ba\u03b7\u03c3\u03b7 \u03ba\u03b1\u03b9 \u039f\u03b9\u03ba\u03bf\u03bd\u03bf\u03bc\u03af\u03b1'), ('7', '\u03a6\u03b9\u03bb\u03bf\u03c3\u03bf\u03c6\u03af\u03b1 - \u03a0\u03b1\u03b9\u03b4\u03b1\u03b3\u03c9\u03b3\u03b9\u03ba\u03ae - \u03a6\u03b9\u03bb\u03bf\u03bb\u03bf\u03b3\u03af\u03b1'), ('6', '\u039d\u03bf\u03bc\u03b9\u03ba\u03ae'), ('8', '\u0386\u03bb\u03bb\u03b5\u03c2 \u03b5\u03b9\u03b4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03ce\u03bd (\u03c0\u03bb\u03b7\u03bd \u0397\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bb\u03cc\u03b3\u03c9\u03bd \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03ce\u03bd)')], max_length=10)),
                ('taxRegNum', models.CharField(blank=True, max_length=9, null=True, validators=[texpenses.validators.afm_validator])),
                ('kind', models.CharField(blank=True, choices=[('1', '\u03a0\u03c1\u03cc\u03b5\u03b4\u03c1\u03bf\u03c2 \u0394\u03a3'), ('3', '\u0395\u03c0\u03b9\u03ba\u03b5\u03c6\u03b1\u03bb\u03ae\u03c2 \u039f\u03bc\u03ac\u03b4\u03b1\u03c2 \u03a3\u03c4\u03c1\u03b1\u03c4\u03b7\u03b3\u03b9\u03ba\u03ae\u03c2'), ('2', '\u039c\u03ad\u03bb\u03bf\u03c2 \u0394\u03a3'), ('5', '\u03a3\u03c4\u03ad\u03bb\u03b5\u03c7\u03bf\u03c2 \u03a4\u03b5\u03c7\u03bd\u03b9\u03ba\u03bf\u03cd \u03a4\u03bc\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2'), ('4', '\u0394\u03b9\u03b1\u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03c4\u03ae\u03c2 \u0388\u03c1\u03b3\u03c9\u03bd'), ('7', '\u039d\u03bf\u03bc\u03b9\u03ba\u03ae \u03a5\u03c0\u03bf\u03c3\u03c4\u03ae\u03c1\u03b9\u03be\u03b7'), ('6', '\u0391\u03bd\u03b1\u03bb\u03c5\u03c4\u03ae\u03c2/\u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03ae\u03c2'), ('9', '\u0395\u03be\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03cc\u03c2 \u03c3\u03c5\u03bd\u03b5\u03c1\u03b3\u03ac\u03c4\u03b7\u03c2'), ('8', '\u0394\u03b9\u03bf\u03b9\u03ba\u03b7\u03c4\u03b9\u03ba\u03ae \u03ba\u03b1\u03b9 \u039f\u03b9\u03ba\u03bf\u03bd\u03bf\u03bc\u03b9\u03ba\u03ae \u03a5\u03c0\u03bf\u03c3\u03c4\u03ae\u03c1\u03b9\u03be\u03b7')], max_length=10, null=True)),
                ('category', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B')], max_length=10, null=True)),
                ('trip_days_before', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('non_grnet_quota', models.FloatField(blank=True, default=0.0, null=True)),
                ('compensation_days_manual', models.IntegerField(default=0)),
                ('expenditure_protocol', models.CharField(blank=True, max_length=30, null=True)),
                ('expenditure_date_protocol', models.DateField(blank=True, null=True)),
                ('movement_protocol', models.CharField(blank=True, max_length=30, null=True)),
                ('movement_date_protocol', models.DateField(blank=True, null=True)),
                ('compensation_petition_protocol', models.CharField(blank=True, max_length=30, null=True)),
                ('compensation_petition_date', models.DateField(blank=True, null=True)),
                ('compensation_decision_protocol', models.CharField(blank=True, max_length=30, null=True)),
                ('compensation_decision_date', models.DateField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dse', models.IntegerField(default=texpenses.models.models.get_next_dse)),
                ('taskStartDate', models.DateTimeField()),
                ('taskEndDate', models.DateTimeField()),
                ('creationDate', models.DateTimeField(default=datetime.datetime(2016, 7, 14, 15, 34, 1, 97840))),
                ('updateDate', models.DateTimeField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('participation_cost', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('additional_expenses_initial', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('additional_expenses_initial_description', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('accountingCode', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TaxOffice',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('kindDescription', models.CharField(blank=True, max_length=300)),
                ('address', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TravelInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('depart_date', models.DateTimeField(blank=True, null=True)),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('transportation', models.CharField(blank=True, choices=[('1', '\u039c\u03b7\u03c7\u03b1\u03bd\u03ae'), ('3', '\u039a\u03b1\u03c1\u03ac\u03b2\u03b9'), ('2', '\u03a4\u03c1\u03b1\u03af\u03bd\u03bf'), ('5', '\u0391\u03c5\u03c4\u03bf\u03ba\u03af\u03bd\u03b7\u03c4\u03bf'), ('4', '\u0391\u03b5\u03c1\u03bf\u03c0\u03bb\u03ac\u03bd\u03bf')], max_length=10, null=True)),
                ('accomondation_price', models.FloatField(default=0.0)),
                ('transportation_price', models.FloatField(default=0.0)),
                ('transport_days_manual', models.IntegerField(default=0)),
                ('overnights_num_manual', models.IntegerField(default=0)),
                ('feeding', models.CharField(blank=True, choices=[('1', '\u03a0\u03bb\u03ae\u03c1\u03b7\u03c2 \u03b4\u03b9\u03b1\u03c4\u03c1\u03bf\u03c6\u03ae'), ('3', '\u039a\u03b1\u03b8\u03cc\u03bb\u03bf\u03c5'), ('2', '\u0397\u03bc\u03b9\u03b4\u03b9\u03b1\u03c4\u03c1\u03cc\u03c6\u03b7')], max_length=10, null=True)),
                ('movement_num', models.CharField(blank=True, max_length=200, null=True)),
                ('arrivalPoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='travel_arrival_point', to='texpenses.City')),
                ('departurePoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='travel_departure_point', to='texpenses.City')),
                ('travel_petition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='texpenses.Petition')),
            ],
        ),
        migrations.AddField(
            model_name='petition',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='texpenses.Project'),
        ),
        migrations.AddField(
            model_name='petition',
            name='taxOffice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='texpenses.TaxOffice'),
        ),
        migrations.AddField(
            model_name='petition',
            name='travel_info',
            field=models.ManyToManyField(to='texpenses.TravelInfo'),
        ),
        migrations.AddField(
            model_name='petition',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='texpenses.Country'),
        ),
        migrations.AddField(
            model_name='additionalexpenses',
            name='petition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='texpenses.Petition'),
        ),
        migrations.AddField(
            model_name='additionalexpenses',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='taxOffice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='texpenses.TaxOffice'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='SecretaryPetition',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('texpenses.petition',),
        ),
        migrations.CreateModel(
            name='SecretaryPetitionSubmission',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('texpenses.petition',),
        ),
        migrations.CreateModel(
            name='UserPetition',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('texpenses.petition',),
        ),
        migrations.CreateModel(
            name='UserPetitionSubmission',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('texpenses.petition',),
        ),
    ]
